name: Test and Deploy

on:
  push:
    branches:
      - master

jobs:
  tests:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x]

    services:
      postgres:
        image: postgres:10.8
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
        # will assign a random free host port
        - 5432/tcp
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    #- run: 
    - run: cd server && npm install
    - run: cd server && npm test
      env:
        CI: true
        NODE_ENV: test
        APP_SECRET: test
        DB_DIALECT: postgres
        DB_HOST: localhost
        DB_PORT: ${{ job.services.postgres.ports[5432] }}
        DB_USER: postgres
        DB_PASS: postgres
        DB_NAME: postgres
    - name: Cache
      uses: actions/upload-artifact@v1
      with:
        name: build
        path: ~/server/dist
  build:
    needs: tests
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: get build
        uses: actions/download-artifact@v1
        with:
          name: build
          path: server/dist
      - name: Publish to Registry
        uses: elgohr/Publish-Docker-Github-Action@master
        with:
          name: diogo8machado/regim
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          workdir: ~/server/dist
