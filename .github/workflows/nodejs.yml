name: Node.js CI

on: [push]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x]

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    #- run: 
    - run: cd server && npm install
    - run: cd server && npm run build --if-present
      env:
        CI: true
        NODE_ENV: test
        APP_SECRET: test

  tests:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x]

    services:
     image: postgres
     env:
     - POSTGRES_USER: postgres
     - POSTGRES_PASSWORD: postgres
     - POSTGRES_BD: postgres
     ports:
     - 5432:5432
     options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    #- run: 
    - run: cd server && npm install
    - run: cd server && npm run build --if-present
    - run: cd server && npm test
      env:
        CI: true
        NODE_ENV: test
        APP_SECRET: test
        DB_DIALECT: postgres
        DB_HOST: localhost
        DB_USER: postgres
        DB_PASS: postgres
        DB_NAME: postgres